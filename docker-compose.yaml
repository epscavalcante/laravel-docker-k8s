version: "3.7"

services:
  app:
    build: .docker/app
    container_name: app
    volumes:
      - .:/var/www
    entrypoint: dockerize -template ./.docker/app/app.conf:.env -wait tcp://mysql:3306 -timeout 60s ./.docker/entrypoint.sh
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=app
      - DB_PASSWORD=root
      - DB_USERNAME=root
    depends_on:
      - mysql
    networks:
      - app

  nginx:
    build: .docker/nginx
    container_name: nginx
    restart: always
    tty: true
    entrypoint: dockerize -template /etc/nginx/conf.d/nginx.conf:/etc/nginx/conf.d/nginx.conf nginx -g "daemon off;"
    environment:
      - NGINX_HOST=app
      - NGINX_PORT=9000
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
    depends_on:
      - app
    networks:
      - app

  mysql:
    image: mysql:5.7
    command: --innodb=use-native-aio=0
    container_name: mysql
    restart: always
    tty: true
    volumes:
      - .docker/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=app
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
    networks:
      - app

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - 9000:80
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=root
      - PMA_PASSWORD=root
    depends_on:
      - mysql
    networks:
      - app

  redis:
    image: redis:alpine
    container_name: redis
    expose:
      - 6379
    networks:
      - app

networks:
  app:
    driver: bridge
